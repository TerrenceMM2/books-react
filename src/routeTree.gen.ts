/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const HomeLazyImport = createFileRoute('/home')()
const DetailsLazyImport = createFileRoute('/details')()

// Create/Update Routes

const HomeLazyRoute = HomeLazyImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/home.lazy').then((d) => d.Route))

const DetailsLazyRoute = DetailsLazyImport.update({
  id: '/details',
  path: '/details',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/details.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/details': {
      id: '/details'
      path: '/details'
      fullPath: '/details'
      preLoaderRoute: typeof DetailsLazyImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/details': typeof DetailsLazyRoute
  '/home': typeof HomeLazyRoute
}

export interface FileRoutesByTo {
  '/details': typeof DetailsLazyRoute
  '/home': typeof HomeLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/details': typeof DetailsLazyRoute
  '/home': typeof HomeLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/details' | '/home'
  fileRoutesByTo: FileRoutesByTo
  to: '/details' | '/home'
  id: '__root__' | '/details' | '/home'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DetailsLazyRoute: typeof DetailsLazyRoute
  HomeLazyRoute: typeof HomeLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  DetailsLazyRoute: DetailsLazyRoute,
  HomeLazyRoute: HomeLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/details",
        "/home"
      ]
    },
    "/details": {
      "filePath": "details.lazy.tsx"
    },
    "/home": {
      "filePath": "home.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
